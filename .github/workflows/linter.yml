name: Python CI
on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.3.1"]

    services:
      postgres:
        image: postgres

        env:
          POSTGRES_PASSWORD: qazwsx
          POSTGRES_USER: cyril
          POSTGRES_DB: page_analyzer_db

        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Run image
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - run: make install
       
      - name: test
        run: make test
        env:
          DATABASE_URL: "postgresql://cyril:qazwsx@localhost:5432/page_analyzer_db"
          SECRET_KEY: "supper"
      - name: test coverage
        run: make test-coverage
        env:
          DATABASE_URL: "postgresql://cyril:qazwsx@localhost:5432/page_analyzer_db"
          SECRET_KEY: "supper"

      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}


      - name: Install dependencies
        run: |
          pip install poetry
          make install
      - name: Run linter
        run: |
          make lint
      - name: Test & publish code coverage
        uses: paambaati/codeclimate-action@v3.2.0
        if: github.ref_name == 'main'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: make test-coverage
          debug: true
